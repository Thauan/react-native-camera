version: 2
executorType: docker
jobs:
  build:
    resource_class: large
    environment:
      - GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError"'
      - REACT_NATIVE_MAX_WORKERS: 2
<<<<<<< HEAD
      - ANDROID_BUILD_TOOLS_VERSION: "26.0.2"
    working_directory: ~/app
    docker:
      - image: entria/react-native-android:0.1.72
=======
      - ANDROID_BUILD_TOOLS_VERSION: '26.0.2'
    working_directory: ~/app
    docker:
      - image: entria/react-native-android:0.1.82
>>>>>>> 57bc327d847ccb7ea90ded51a5a82168388b1349
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-npm-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - v1-npm
      - run:
          name: Install Dependencies
<<<<<<< HEAD
          command: yarn install
=======
          command: yarn install --ignore-engines
>>>>>>> 57bc327d847ccb7ea90ded51a5a82168388b1349
      - run:
          name: Lint
          command: yarn lint
      - run:
          name: Run Checks
          command: |
            cd android
            chmod +x ./gradlew && ./gradlew check
<<<<<<< HEAD
=======
      - run:
          name: Build Sample App
          command: |
            cd examples/basic/android
            yarn
            chmod +x ./gradlew && ./gradlew build
      - deploy:
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              yarn ci:publish
            fi
>>>>>>> 57bc327d847ccb7ea90ded51a5a82168388b1349
      - save_cache:
          key: v1-npm
          paths:
            - node_modules/
      - save_cache:
          key: v1-npm-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - node_modules/
